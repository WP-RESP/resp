var __spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r},RESP_DATA=RESP_DATA||{},LogType;!function(LogType){LogType[LogType.Info=0]="Info",LogType[LogType.Error=1]="Error"}(LogType||(LogType={}));var RESP=function(){function RESP(){}return RESP.init=function(){this.noJquery()&&this.debug()&&this.log("Default jQuery library is not loaded",LogType.Info)},RESP.ready=function(){for(var callback=[],_i=0;_i<arguments.length;_i++)callback[_i]=arguments[_i];"loading"!=document.readyState?callback.forEach((function(c){c()})):callback.forEach((function(c){document.addEventListener("DOMContentLoaded",c)}))},RESP.noJquery=function(){return"1"===RESP_DATA.noJquery},RESP.debug=function(){return"1"===RESP_DATA.developmentMode},RESP.log=function(m,t){for(var p=[],_i=2;_i<arguments.length;_i++)p[_i-2]=arguments[_i];this.debug()&&(t===LogType.Info&&console.log.apply(console,__spreadArrays([m],p)),t===LogType.Error&&console.error.apply(console,__spreadArrays([m],p)))},RESP.registerExtension=function(n,o){this.extensions.push({name:n,instance:o}),this.log("Extension '%s' is registered.",LogType.Info,n)},RESP.query=function(s,c){void 0===c&&(c=null);var elem=Array.prototype.slice.call(document.querySelectorAll(s));return null!==c&&elem.forEach((function(e,i){return c(e,i)})),elem},RESP.removeClass=function(s,c){var r,elem;if(void 0===c&&(c=null),elem="string"==typeof s?RESP.query(s):[s],null==c)elem.forEach((function(i){for(;i.classList.length>0;)i.classList.remove(i.classList.item(0))}));else{var cs_1="string"==typeof c?[c]:c;elem.forEach((function(i){cs_1.forEach((function(k){i.classList.remove(k)}))}))}},RESP.hasClass=function(e,c){var r,result=!0;return"string"==typeof c&&(c=[c]),"string"==typeof e&&(e=RESP.query(e)[0]),c.every((function(r){return e.classList.contains(r)}))},RESP.addClass=function(s,c,f){var r,elem;return void 0===f&&(f=!1),(elem="string"==typeof s?RESP.query(s):s instanceof Element?[s]:s).forEach((function(i){if(f)for(;i.classList.length>0;)i.classList.remove(i.classList.item(0));var cs;("string"==typeof c?[c]:c).forEach((function(k){k in i.classList||i.classList.add(k)}))})),elem},RESP.extensions=[],RESP}();RESP.init();
//# sourceMappingURL=resp.min.js.map